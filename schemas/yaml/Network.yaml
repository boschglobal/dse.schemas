# Copyright 2023 Robert Bosch GmbH
#
# SPDX-License-Identifier: Apache-2.0

---
openapi: 3.0.0
info:
  title: Network
  version: 1.0.0
paths:
  /Network:
    get:
      responses:
        '200':
          description: ''
components:
  schemas:
    Network:
      description: |
        A Network definition.

        ### Supported annotations:
        |Annotation|Description|
        |---|---|
        |`message_lib`|Relative path of the shared library containing the Network Message symbols.|
        |`function_lib`|Relative path of the shared library containing Network Function symbols.|
        |`node_id`|The identifier of the Node used to indicate the sender of a network message. Typically specified in a `mimeTYPE` for the Network Signal, however a value may also be specified here.|
        |`interface_id`|The identifier of the Interface of the Node used to send a network message. Typically specified in a `mimeTYPE` for the Network Signal, however a value may also be specified here.|
        |`bus_id`|The identifier of the Bus connected to the Interface of the Node. Typically specified in a `mimeTYPE` for the Network Signal, however a value may also be specified here.|
      type: object
      required:
        - kind
        - spec
      properties:
        kind:
          type: string
          enum:
            - Network
        metadata:
          $ref: 'metadata.yaml#/components/schemas/ObjectMetadata'
        spec:
          type: object
          required:
            - messages
          properties:
            messages:
              type: array
              description: A list of messages belonging to this Network.
              items:
                $ref: '#/components/schemas/Message'
      example:
        kind: Network
        metadata:
          name: CAN1
          annotations:
            message_lib: examples/stub/data/message.so
            function_lib: examples/stub/data/function.so
        spec:
          messages:
            - message: systemStatus
              annotations:
                struct_name: CAN1_systemStatus_t
                struct_size: 4
                frame_id: 0x1f0u
                frame_length: 8u
                frame_schedule: 10ms
              signals:
                - signal: Crc
                  annotations:
                    struct_member_name: crc
                    struct_member_offset: 0
                    struct_member_primitive_type: uint8_t
                - signal: Alive
                  annotations:
                    struct_member_name: alive
                    struct_member_offset: 1
                    struct_member_primitive_type: uint8
                - signal: Temperature
                  annotations:
                    struct_member_name: temperature
                    struct_member_offset: 2
                    struct_member_primitive_type: int16_t
              functions:
                encode:
                  - function: counter_inc_uint8
                    annotations:
                      position: 1
                  - function: crc_generate
                    annotations:
                      position: 0
                decode:
                  - function: crc_validate
                    annotations:
                      position: 0
    Message:
      type: object
      description: |
        A Network message definition.

        ### Supported annotations:
        |Annotation|Description|
        |---|---|
        |`struct_name`|Name of the typedef/struct representing the message.|
        |`struct_size`|Size of the message struct (in bytes).|
        |`frame_id`|The frame id of the message when encoded to a bus transport (e.g. CAN Frame ID).|
        |`frame_length`|The length of the message when encoded (in bytes).|
        |`frame_schedule`|Message will be sent according to the specified schedule (e.g. "1s", "1ms", "1us").|
      required:
        - message
      properties:
        message:
          type: string
          description: The name of the message.
          example: systemStatus
        annotations:
          $ref: 'metadata.yaml#/components/schemas/Annotations'
        signals:
          type: array
          description: A list of signals represented in this message.
          items:
            $ref: '#/components/schemas/Signal'
        functions:
          type: object
          description: Message functions to be applied to this message.
          properties:
            encode:
              type: array
              description: Message functions applied to the encode processing path (i.e. from Signal to Network interface). Functions are implicitly applied in the order of definition.
              items:
                $ref: '#/components/schemas/Function'
            decode:
              type: array
              description: Message functions applied to the decode processing path (i.e. from Network to Signal interface). Functions are implicitly applied in the order of definition.
              items:
                $ref: '#/components/schemas/Function'
      example:
        message: systemStatus
        annotations:
          struct_name: CAN1_systemStatus_t
          struct_size: 4
          frame_id: 0x1f0u
          frame_length: 8u
        signals:
          - signal: Crc
            annotations:
              struct_member_name: crc
              struct_member_offset: 0
              struct_member_primitive_type: uint8_t
        functions:
          encode:
            - function: crc_generate
              annotations:
                position: 0
          decode:
            - function: crc_validate
              annotations:
                position: 0
    Signal:
      type: object
      description: |
        A Network signal definition.

        ### Supported annotations:
        |Annotation|Description|
        |---|---|
        |`init_value`|The signal is initialised to this value. The value will be interpreted according to the `struct_member_primitive_type` annotation.|
        |`struct_member_name`|Name of the struct member which represents this signal.|
        |`struct_member_offset`|Offset of the member in the struct (in bytes).|
        |`struct_member_primitive_type`|The primitive type of the member (select from int8_t, int16_t, int32_t, int64_t, uint8_t, uint16_t, uint32_t, uint64_t, float or double).|
      required:
        - signal
      properties:
        signal:
          type: string
          description: The name of the signal.
        annotations:
          $ref: 'metadata.yaml#/components/schemas/Annotations'
      example:
        signal: Temperature
        annotations:
          struct_member_name: temperature
          struct_member_offset: 2
          struct_member_primitive_type: int16_t
    Function:
      type: object
      description: |
        A Network Function definition.
      required:
        - function
      properties:
        function:
          type: string
          description: The name of the function (i.e. the name of the symbol _in_ the Network Function shared library).
        annotations:
          $ref: 'metadata.yaml#/components/schemas/Annotations'
      example:
        function: crc_generate
        annotations:
          position: 0
