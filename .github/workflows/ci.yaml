---
name: CI
on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository_owner }}/dse
  PACKAGE_VERSION: 0.0.2

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build package metadata
        id: package_meta
        uses: docker/metadata-action@v5
        with:
          images: dse/schemas
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Get package version
        if: startsWith(github.ref, 'refs/tags/')
        id: package
        run: |
          echo "PACKAGE_VERSION=${{ fromJSON(steps.package_meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_ENV

      - name: Flatc build targets
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-flatc-builder:main
          username: ${{ github.actor }}
          password:  ${{ secrets.GITHUB_TOKEN }}
          options: |
            --volume ${{ github.workspace }}:/work
            --env PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          run: |
            cd work; make fbs

      - name: Python build targets
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-python-builder:main
          username: ${{ github.actor }}
          password:  ${{ secrets.GITHUB_TOKEN }}
          options: |
            --volume ${{ github.workspace }}:/work
            --env PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          run: |
            cd work
            make python
            make msgpack

      - name: Package
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-python-builder:main
          username: ${{ github.actor }}
          password:  ${{ secrets.GITHUB_TOKEN }}
          options: |
            --volume ${{ github.workspace }}:/work
            --env PACKAGE_VERSION=${{ env.PACKAGE_VERSION }}
          run: |
            cd work
            make dist_package
            ls -1sh ./dist/*.*
            ls -1sh ./dist/python/dist/*.*

      - name: Create Release from Tag
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
            --notes-from-tag

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release upload "$tag" \
            dist/dse-schemas.tar.gz \
            dist/python/dist/dse.schemas-${{ env.PACKAGE_VERSION }}-py3-none-any.whl
